# Set everything to be logged to the console
log4j.rootCategory=WARN, console

# Define console appender
# """
# are standard and remain same in most of the projects
# 
# - this section with the previous line of rootCatergory sets up root level
#   log4j configuration and will stop all the log messages sent by the Spark
#   and other packages except warnings and errors, we will get clean and minimal
#   log output.
# """
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.target=System.out
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n

# Application Log
# """
# - 2nd log level specific to the spark application.
#   - targetting a specific logger (com.example.sparkapp, adjust package name)
#   - we are stopping log messages from com.example.sparkapp from being processed
#     by it's parent loggers preventing duplicate logs.
# """
log4j.logger.com.example.sparkapp=INFO, console, file
log4j.additivity.com.example.sparkapp=false

# Define file appender
log4j.appender.file=org.apache.log4j.RollingFileAppender
# """
# - spark.yarn.app.container.log.dir variable: to find the log file directory location
# - ${logfile.name}.log: to find log file name
# """
log4j.appender.file.File=${spark.yarn.app.container.log.dir}/${logfile.name}.log
log4j.appender.file.ImmediateFlush=true
log4j.appender.file.Append=false
log4j.appender.file.MaxFileSize=500MB
log4j.appender.file.MaxBackupIndex=2
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.conversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n

# Recommendations from Spark log4j configuration template
log4j.logger.org.apache.spark.repl.Main=WARN
log4j.logger.org.spark_project.jetty=WARN
log4j.logger.org.spark_project.jetty.util.component.AbstractLifeCycle=ERROR
log4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=INFO
log4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=INFO
log4j.logger.org.apache.parquet=ERROR
log4j.logger.parquet=ERROR
log4j.logger.parquet.hadoop.hive.metastore.RetryingHMSHandler=FATAL
log4j.logger.org.apache.hadoop.hive.ql.exec.FunctionRegistry=ERROR
